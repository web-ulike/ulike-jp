<script>
  document.documentElement.classList.replace('no-js', 'js');

  window.theme = window.theme || {};
  theme.routes = {
    shop_url: '{{ request.origin }}',
    root_url: '{{ routes.root_url }}',
    cart_url: '{{ routes.cart_url }}',
    cart_add_url: '{{ routes.cart_add_url }}',
    cart_change_url: '{{ routes.cart_change_url }}',
    cart_update_url: '{{ routes.cart_update_url }}',
    search_url: '{{ routes.search_url }}',
    predictive_search_url: '{{ routes.predictive_search_url }}',
  };

  theme.variantStrings = {
    preOrder: {{ 'products.product.pre_order' | t | json }},
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }},
  };

  theme.shippingCalculatorStrings = {
    error: {{ 'general.cart.shipping_calculator.error' | t | json }},
    notFound: {{ 'general.cart.shipping_calculator.not_found' | t | json }},
    oneResult: {{ 'general.cart.shipping_calculator.one_result' | t | json }},
    multipleResults: {{ 'general.cart.shipping_calculator.multiple_results' | t | json }},
  };

  theme.recipientFormStrings = {
    expanded: `{{ 'recipient.form.expanded' | t }}`,
    collapsed: `{{ 'recipient.form.collapsed' | t }}`,
  };

  theme.dateStrings = {
    d: `{{ 'general.date.d' | t }}`,
    day: `{{ 'general.date.day' | t }}`,
    days: `{{ 'general.date.days' | t }}`,
    h: `{{ 'general.date.h' | t }}`,
    hour: `{{ 'general.date.hour' | t }}`,
    hours: `{{ 'general.date.hours' | t }}`,
    m: `{{ 'general.date.m' | t }}`,
    minute: `{{ 'general.date.minute' | t }}`,
    minutes: `{{ 'general.date.minutes' | t }}`,
    s: `{{ 'general.date.s' | t }}`,
    second: `{{ 'general.date.second' | t }}`,
    seconds: `{{ 'general.date.seconds' | t }}`,
  };

  theme.strings = {
    recentlyViewedEmpty: {{ 'general.cart.recently_viewed.empty' | t | json }},
    close: {{ 'general.accessibility.close' | t | json }},
    next: {{ 'general.pagination.next' | t | json }},
    previous: {{ 'general.pagination.previous' | t | json }},
    qrImageAlt: {{ 'gift_cards.issued.qr_image_alt' | t | json }}
  };
  theme.settings = {
    cartType: {{ settings.cart_type | json }},
    isCartTemplate: {% if request.page_type == 'cart' %}true{% else %}false{% endif %},
    pswpModule: {{ 'photoswipe.min.js' | asset_url | split: '?' | first | json }},
    themeName: 'Concept',
    themeVersion: '1.3.1',
    agencyId: ''
  };

  {%- if request.page_type == 'product' -%}
    // We save the product ID in local storage to be eventually used for recently viewed section
    try {
      const recentlyViewedProducts = new Set(JSON.parse(window.localStorage.getItem(`${theme.settings.themeName}:recently-viewed`) || '[]'));

      recentlyViewedProducts.delete({{ product.id }}); // Delete first to re-move the product
      recentlyViewedProducts.add({{ product.id }});

      window.localStorage.setItem(`${theme.settings.themeName}:recently-viewed`, JSON.stringify(Array.from(recentlyViewedProducts.values()).reverse()));
    } catch (e) {
      // Safari in private mode does not allow setting item, we silently fail
    }
  {%- endif -%}

  {%- if request.page_type == 'policy' -%}
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelector('.shopify-policy__title').classList.add('h2');
      document.querySelector('.shopify-policy__body .rte').classList.add('text-base');
    });
  {%- endif -%}
</script>
