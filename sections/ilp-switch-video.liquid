<style>
  #shopify-section-{{ section.id }} {
    --progress-bar-color: {{ section.blocks.first.settings.text_color.red }}, {{ section.blocks.first.settings.text_color.green }}, {{ section.blocks.first.settings.text_color.blue }};
    --section-autoplay-duration: {% if section.settings.autoplay %}{{ section.settings.cycle_speed }}s{% else %}0s{% endif %};
    --section-animation-play-state: paused;
    background-color: {{ section.settings.background }}; /* Allows to set a placeholder color while loading */
    --heading-color: {{ section.settings.text_color.red }}, {{ section.settings.text_color.green }}, {{ section.settings.text_color.blue }};
      --text-color: {{ section.settings.text_color.red }}, {{ section.settings.text_color.green }}, {{ section.settings.text_color.blue }};
      --primary-button-background: {{ section.settings.button_background.red }}, {{ section.settings.button_background.green }}, {{ section.settings.button_background.blue }};
      --primary-button-text-color: {{ section.settings.button_text_color.red }}, {{ section.settings.button_text_color.green }}, {{ section.settings.button_text_color.blue }};
  }
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }

  @media screen and (max-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: calc({{ section.settings.padding_top }}px * 0.6);
      padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.6);
    }
  }
  .switch-video-wrap{
    max-width: 1200px;
    margin: 0 auto;
  }
  .tab-bar-carousel{
    max-width: 840px;
    margin: 0 auto;
  }
  .slick-slide.is-active {
    opacity: 1;
    display: block;
}
.slick-slide {
    transition: opacity .2s;
    opacity: 0;
    display: none;
}
.tab-bar-wrap{
  position: relative;
}
.tab-bar-item {
  display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 20px;
    margin: 60px 0 25px;
    line-height: 50px;
}
.tab-bar-txt{
  margin: 0;
    cursor: pointer;
    color: #040000;
        opacity: 0.7;
}
.tab-bar-txt.is-active {
    color: #040000;
    border-bottom: 2px solid #040000;
    z-index: 1;
        opacity: 1;
}
.article-dot {
    display: flex;
    align-items: center;
    justify-content: center;
    background: #A0A0A0;
    position: relative;
    height: 2px;
    position: absolute;
    width: 100%;
    bottom: 0px;
    z-index: 0;
}
.article-dot-item {
    width: 100px;
    height: 2px;
    border-radius: 15px;
    margin: 0;
    position: absolute;
    left: 0;
    background: #1B1B1B;
    top: 0;
    transition: all .8s;
    display: none;
}
.media_video{
  position: relative;
}
.replay_play{
    display: none;
    position: absolute;
    right: 16px;
    bottom: 16px;
    text-align: center;
    cursor: pointer;
}
@media screen and (max-width: 740px) {
    /* 自定义滚动条样式 */
    .tab-bar-item::-webkit-scrollbar {
      width: 0px; /* 滚动条宽度 */
      background-color: transparent; /* 滚动条背景色 */
    }
    .tab-bar-item::-webkit-scrollbar-thumb {
      background-color: transparent; /* 滚动条滑块颜色 */
    }
    .tab-bar-item::-webkit-scrollbar-thumb:hover {
      background-color: transparent; /* 滚动条滑块悬停时颜色 */
    }
    .tab-bar-item {
      font-size: 16px;
      overflow-x: scroll;
      scrollbar-width: none; /* Firefox */
      -ms-overflow-style: none; /* IE 10+ */
          margin-bottom: 0;
    }
    .tab-bar-txt {
      flex-shrink: 0;
      margin-right: 24px;
    }
    .article-dot {
      bottom: 20px;
    }
  .tab-bar-wrap{
  padding-bottom: 20px;
}
}
</style>

<section class="switch-video-box section-{{ section.id }}-padding">
  <div class="container">
    <div class="switch-video-wrap">
      {%- if section.settings.title != blank -%}
          <h2 class="heading h2 text--center">
            <split-lines>{{ section.settings.title | escape }}</split-lines>
          </h2>
        {%- endif -%}

        {%- if section.settings.subheading != blank -%}
          <div class="text--center" style="max-width: 1100px;margin: 0 auto;">
           {{ section.settings.subheading | escape }}
          </div>
        {%- endif -%}
        <div class="tab-bar-carousel" id="thumbs">
          <div class="tab-bar-wrap">
            <div class="tab-bar-item">
              {%- for block in section.blocks -%}
                <div class="tab-bar-txt" data-target="#content{{forloop.index}}" data-index="{{forloop.index}}">
                  {{ block.settings.result_title |  escape }}
                </div>
              {%- endfor -%}
            </div>
            <div class="article-dot">
              <div class="article-dot-item"></div>
            </div>
          </div>
        </div>

        <div class="carousel">
          <div class="slick-swiper" id="gallery">
            <div class="slick-track">
              {%- for block in section.blocks -%}
                <div class="slick-slide" id="content{{forloop.index}}">
                  <div class="media_video">
                    <video id="videoPlayer" class="video-player" loop muted playsinline>
                      <source src="{{ block.settings.video_link }}">
                    </video>
                    <div class="replay_play">
                      <svg xmlns="http://www.w3.org/2000/svg" width="23" height="27" fill="none" viewBox="0 0 23 27" class="design-iconfont-ilp">
                        <path d="M11.2736 9.12443L6.01538 5.25438L9.88542 0L11.243 0.994279L8.37106 4.89874L12.2717 7.77068L11.2736 9.12443Z" fill="#D8D8D8"/>
                        <path d="M11.396 26.2185C8.35195 26.2185 5.49148 25.033 3.33848 22.88C1.18549 20.727 0 17.8665 0 14.8225H1.68263C1.68263 20.1801 6.03834 24.5358 11.396 24.5358C16.7536 24.5358 21.1093 20.1801 21.1093 14.8225C21.1093 9.46485 16.7536 5.10914 11.396 5.10914C10.4093 5.10914 9.43801 5.25446 8.50874 5.54509L8.00777 3.93895C9.10148 3.5986 10.2411 3.42651 11.396 3.42651C14.44 3.42651 17.3005 4.612 19.4535 6.765C21.6065 8.918 22.7919 11.7785 22.7919 14.8225C22.7919 17.8665 21.6065 20.727 19.4535 22.88C17.3005 25.033 14.44 26.2185 11.396 26.2185Z" fill="#D8D8D8"/>
                      </svg>
                    </div>
                  </div>
                </div>
              {%- endfor -%}
            </div>
          </div>
        </div>
    </div>
  </div>
</section>

<script>
function initSwitchVideo(module) {
   let documentWidth = document.documentElement.clientWidth || document.body.clientWidth;
  // 使用 module.querySelector 和 module.querySelectorAll 替换 document.querySelector 和 document.querySelectorAll
  // 这样，我们只会选择当前模块中的元素
    module.querySelectorAll('.tab-bar-txt').forEach((menuItem) => {
    menuItem.addEventListener('click', function(e) {
      const targetId = menuItem.getAttribute('data-target');
      const targetContent = module.querySelector(targetId);
      // 移除其他菜单项的 'show' 类，为当前点击的菜单项添加 'show' 类
      module.querySelectorAll('.tab-bar-txt').forEach(function (item) {
        item.classList.remove("is-active");
      });
      module.querySelectorAll('.replay_play').forEach(function (replay) {
        replay.style.display = 'none';
      });
      this.classList.add("is-active");
      module.querySelectorAll('.slick-slide.is-active').forEach((content) => {
        if (content !== targetContent) {
          content.classList.remove('is-active');
          content.querySelector('.video-player').pause();
          content.querySelector('.video-player').currentTime = 0;
        }
      });
      targetContent.classList.add('is-active');
      targetContent.querySelector('.video-player').play();
      if( documentWidth < 740){
        this.parentNode.scrollLeft = ((e.target.dataset.index-1)*(e.target.offsetWidth)) - 60; // 以像素为单位设置滚动位置
      }
    });
    });
      // 模拟第一个菜单项的点击事件
      module.querySelectorAll('.tab-bar-txt')[0].click();
      /*module.querySelectorAll('.video-player').forEach((videoItem) => {
        videoItem.addEventListener('ended', function() {
          // 视频播放完成后的操作
          this.nextElementSibling.style.display = 'block'; // 显示目标元素
        });
      })*/
       module.querySelectorAll('.replay_play').forEach((replayItem) => {
         replayItem.addEventListener('click', function() {
          this.previousElementSibling.play();
         })
       })
    }
    // 在 DOMContentLoaded 事件触发后，为每个模块调用 initSwitchVideo 函数
    document.addEventListener("DOMContentLoaded", function () {
      document.querySelectorAll(".shopify-section--switch-video").forEach(function (module) {
        initSwitchVideo(module);
      });
    });
</script>
{% schema %}
{
  "name": "Switch Video",
  "class": "shopify-section--switch-video",
  "max_blocks": 5,
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Tell your story"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Slide title"
    },
    {
      "type": "range",
      "id": "cycle_speed",
      "min": 4,
      "max": 20,
      "step": 1,
      "unit": "sec",
      "label": "Change slides every",
      "default": 5
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "info": "Used while slideshow image is loading",
      "default": "rgba(0,0,0,0)"
    },
     {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "Column",
      "name": "item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "info": "2160 x 1080px .jpg recommended, 1080 x 1080px .jpg recommended if split",
          "label": "Image"
        },
        {
          "type": "image_picker",
          "id": "mobile_image",
          "label": "Mobile image",
          "info": "1000 x 1400px .jpg recommended. If none is set, desktop image will be used."
        },
        {
          "type": "video",
          "id": "video",
          "label": "Video",
          "info": "Replaces the external video if both are set."
        },
        {
          "type": "url",
          "id": "video_link",
          "label": "Video link"
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "text",
          "id": "result_title",
          "label": "Heading",
          "default": "Your content"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Switch Video",
      "blocks": [
        {
          "type": "Column"
        }
      ]
    }
  ]
}
{% endschema %}