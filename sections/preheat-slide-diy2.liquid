<style>
.slide-diy{
  padding: 130px 0;
  background:url('https://cdn.shopify.com/s/files/1/0553/7392/2352/files/50_2_1.png?v=1719819376') no-repeat 100% 100% #000;
}

.slide-diy .slide-diy-top{
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.slide-diy-top strong{
  background-image: -webkit-linear-gradient(bottom, #c0e9ff, #fff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-family:var(--font-it-family)
}
.slide-diy .slide-diy-title{
color:  #190A0A;
font-family: var(--font-hd-family);
font-size: 30px;
font-style: normal;
font-weight: 400;
line-height: 150%;
}

.slide-diy .slide-diy-sub{
  color: #000;
  font-size: 18px;
  line-height: 1.5;
  max-width: 595px;

}

.slide-diy .slide-diy-cont{
  position: relative;
  margin-top: 50px;
  display: flex;
  align-items: initial;
}

.slide-diy .slide-diy-left{
  width: 32.6667%;
  overflow: hidden;
  position: relative;
  flex-shrink: 0;
}

.slide-diy-left-top{
  display: flex;
  overflow: hidden;
}
.slide-diy .slide-diy-left::after{
  position: absolute;
  content: '';
  height: 100%;
  width: 1px;
  background: #fff;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
  z-index: 2;
  display: none;
}

.slide-diy .slide-diy-img{
  width: 50%;
  position: relative;
  z-index: 1;
}

.slide-diy .slide-diy-img-item{
  position: absolute;
  z-index: 1;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.slide-diy .slide-diy-img-item .img{
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* .slide-diy .slide-diy-img-item.close{
  left: 0;
  top: 0;
  z-index: 3;
  overflow: hidden;
  width: 0;
  transition: width 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
} */

/* .slide-diy .slide-diy-img-item.close .img{
  width: auto;
} */

.slide-diy .slide-diy-img-item.active{
  position: relative;
  z-index: 2;
}

.slide-diy .slide-diy-img-txt{
  color: #fff;
  font-size: 12px;
  line-height: 1;
  letter-spacing: .6px;
  position: absolute;
  z-index: 4;
  left: 15px;
  top: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  width:86px;
  height:33px;
  border-radius: 40px;
  border: 1px solid var(--Ulike---Warm-White, #FBFAF4);
}

.slide-diy .slide-diy-img:nth-child(2) .slide-diy-img-txt{
  left: auto;
  right: 15px;
}

.slide-diy .slide-diy-right{
  margin-left: 20px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: calc(67.333% - 20px);
}

.slide-diy .slide-diy-img-list{
  overflow: hidden;
  position: relative;
}

.slide-diy .slide-diy-img-list::after {
  position: absolute;
  content: '';
  display: none;
  width: 70%;
  height: 100%;
  right: 0;
  top: 0;
  z-index: 3;
  --background: 255,255,255;
  background: linear-gradient(to left, rgb(var(--background)), rgba(var(--background), 0));
  pointer-events: none;
}

.slide-diy .slide-diy-list{
  display: flex;
}

.slide-diy .slide-diy-sm{
  width: 19.5%;
  flex-shrink: 0;
  margin-right: 24px;
  cursor: pointer;
}
.slide-diy .slide-diy-list .img{
  display: block;
  width: 100%;
}

.slide-diy .slide-diy-sm-txt{
  color: rgba(0, 0, 0, 0.36);
  font-size: 30px;
  line-height: 1.44;
  padding-top: 13px;
  margin-top: 16px;
  border-top: 1px solid rgba(0, 0, 0, 0.12);
  padding-left: 3px;
}

.slide-diy .slide-diy-bottom{
  display: flex;
  align-items: flex-end;
  gap: 42px;
  padding-top: 13px;
  margin-top: 16px;
  border-top: 1px solid rgba(0, 0, 0, 0.12);
  position: relative;
}

.slide-diy .slide-diy-bottom::before{
  position: absolute;
  content: '';
  display: block;
  width: 0;
  height: 2px;
  background: #E0004D;
  left: 0;
  top: -1px;
}

.slide-diy .slide-diy-bottom.active::before{
  width: 100%;
  transition: width 2.4s linear;
}

.slide-diy .slide-diy-arraw{
  position: absolute;
  top: -80px;
  right: 0;
  display: flex;
  justify-content: flex-end;
  gap: 22px;
}

.slide-diy .slide-diy-arraw-item{
  width: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.slide-diy .slide-diy-arraw-item svg{
  display: block;
  opacity: 1;
  transition: all .3s ease-in;
  filter:invert(1)
}

.slide-diy .slide-diy-arraw-item:hover svg{
  opacity: .3;
}

.slide-diy .slide-diy-text{
  flex: 1;
  position: relative;
  height: 100%;
  display: flex;
  overflow: hidden;
}

.slide-diy .slide-diy-text::before{
  position: absolute;
  content: 'â€œ';
  font-size: 200px;
  line-height: 1;
  color: #E6E6E6;
  left: 25px;
  top: -10px;
  z-index: 0;
  display: none;
}

.slide-diy .slide-diy-txt-item{
  position: relative;
  z-index: 2;
  flex-shrink: 0;
  width: 100%;
  margin-right: 100px;
  color: #272724;
  font-size: 30px;
  line-height: 1.44;
  padding-left: 3px;
}

.slide-diy .slide-diy-msg{
  width: 32.6667%;
  color: #3F3636;
font-size: 12px;
font-style: normal;
font-weight: 400;
line-height: 150%;
  margin-top: 10px;
}

.slide-diy .slide-diy-dot{
  display: none;
  align-items: center;
  justify-content: center;
  margin-top: 26px;
}

.slide-diy .slide-diy-dot-item{
  width: 5px;
  height: 5px;
  background: #D9D9D9;
  margin: 0 5px;
  border-radius: 50%;
}

.slide-diy .slide-diy-dot-item.active{
  background: #7A7A7A;
}
  .full_container{
    --container-gutter: 40px;
    width: 100%;
    max-width: calc(100% - var(--container-gutter));
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--container-gutter);
    padding-right: var(--container-gutter);
    --container-outer-margin: 0px;
  }
@media (max-width:1550px) {
  .slide-diy .slide-diy-txt-item{
    font-size: 25px;
  }
  .slide-diy .slide-diy-sm-txt{
    font-size: 25px;
  }
}

@media (max-width:1300px) {

  .slide-diy .slide-diy-text::before{
    font-size: 160px;
    left: 12px;
    top: -17px;
  }
  .slide-diy .slide-diy-txt-item{
    font-size: 18px;
  }
  .slide-diy .slide-diy-sm-txt{
    font-size: 18px;
  }
}

@media (max-width:991px) {
  .slide-diy{
    padding: 50px 0;
  }
  .slide-diy{
    background: linear-gradient(180deg, #121F2B 0%, #424E5F 100%) !important;
  }
  .slide-diy .slide-diy-top{
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
  }
  .slide-diy .slide-diy-title{
    font-size: 16px;
  }
  .slide-diy .slide-diy-sub{
    margin-top: 10px;
    font-size: 14px;
  }

  .slide-diy .slide-diy-cont{
    margin-top: 35px;
    flex-direction: column-reverse;
    gap: 30px;
  }
  .slide-diy .slide-diy-left{
    width: 100%;
    pointer-events: none;
  }
  
  .slide-diy .slide-diy-right{
    margin-left: 0;
    width: 100%;
  }
  .slide-diy .slide-diy-msg{
    width: 100%;
    font-size: 10px;
    margin-top: 10px;
  }
  .slide-diy .slide-diy-img-txt{
    width:58px;
    height:26px;
    top:10px;
    left:10px;
  }
  .slide-diy .slide-diy-img:nth-child(2) .slide-diy-img-txt{
    left:auto;
    right: 10px;
  }
  .slide-diy .slide-diy-list .img{
    display: none;
  }
  .slide-diy .slide-diy-bottom{
    display: none;
  }
  .slide-diy .slide-diy-arraw{
    display: none;
  }

  .slide-diy .slide-diy-sm{
    width: 18%;
  }

  .slide-diy .slide-diy-sm-txt{
    font-size: 12px;
    margin-top: 0;
    padding-top: 5px;
  }
  .slide-diy .active .slide-diy-sm-txt{
    color: #000;
    border-color: #000;
  }
  .slide-diy .slide-diy-text::before {
    font-size: 200px;
    left: 12px;
    top: -10px;
  }
  .slide-diy .slide-diy-dot{
    display: flex;
  }
   .full_container{
    --container-gutter: 20px;
  }
}
</style>

<section class="section-box next-box">
  <div class="slide-diy next-box-cont">
    <div class="full_container">
      <div class="slide-diy-top">
        <div class="slide-diy-title line-top">{{ section.settings.text }}</div>
        <div class="slide-diy-sub line-top" style="transition-delay: 0.1s">{{ section.settings.text1 }}</div>
      </div>
      <div class="slide-diy-cont">
        {%- if section.blocks.size > 0 -%}
          <div class="slide-diy-arraw">
            <div class="slide-diy-arraw-item">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="27" viewBox="0 0 36 27" fill="none">
                <g clip-path="url(#clip0_860_8661)">
                  <path d="M0 13.5094C0 13.7228 0.08078 13.9344 0.235317 14.0961L12.528 26.9983L13.8117 25.825L2.89756 14.3696H36C36 13.42 35.2133 12.6493 34.2439 12.6493H0.918438C0.586536 12.6493 0.263416 12.8127 0.105366 13.1C0.0333672 13.229 0 13.3701 0 13.5094Z" fill="#190A0A"/>
                  <path d="M1.83648 10.4938C2.52312 11.1647 3.63473 11.1647 4.3196 10.4938L13.792 1.21625L12.5504 0L1.83824 10.4938H1.83648Z" fill="#190A0A"/>
                </g>
                <defs>
                  <clipPath id="clip0_860_8661">
                    <rect width="36" height="27" fill="white" transform="matrix(-1 0 0 1 36 0)"/>
                  </clipPath>
                </defs>
              </svg>
            </div>
            <div class="slide-diy-arraw-item">
              <svg xmlns="http://www.w3.org/2000/svg" width="36" height="27" viewBox="0 0 36 27" fill="none">
                <g clip-path="url(#clip0_860_8658)">
                  <path d="M36 13.5094C36 13.7228 35.9192 13.9344 35.7647 14.0961L23.472 26.9983L22.1883 25.825L33.1024 14.3696H0C0 13.42 0.786732 12.6493 1.7561 12.6493H35.0816C35.4135 12.6493 35.7366 12.8127 35.8946 13.1C35.9666 13.229 36 13.3701 36 13.5094Z" fill="#190A0A"/>
                  <path d="M34.1635 10.4938C33.4769 11.1647 32.3653 11.1647 31.6804 10.4938L22.208 1.21625L23.4496 0L34.1618 10.4938H34.1635Z" fill="#190A0A"/>
                </g>
                <defs>
                  <clipPath id="clip0_860_8658">
                    <rect width="36" height="27" fill="white"/>
                  </clipPath>
                </defs>
              </svg>
            </div>
          </div>
        {%- endif -%}   
        <div class="slide-diy-left to-top" style="transition-delay: 0.2s">
          <div class="slide-diy-left-top">
            <div class="slide-diy-img">
              {%- for block in section.blocks -%}
                {%- if block.settings.image1 != blank -%}
                  <div class="slide-diy-img-item">
                    <img
                      loading="lazy"
                      class="img"
                      width="{{ block.settings.image1.width }}"
                      height="{{ block.settings.image1.height }}"
                      {% render 'image-attributes', image: block.settings.image1 %}
                      alt="{{ block.settings.image1.alt | escape }}"
                    >
                  </div>
                {%- endif -%}
              {%- endfor -%}
              {%- if section.settings.text2 != blank -%}
                <div class="slide-diy-img-txt">{{ section.settings.text2 }}</div>
              {%- endif -%}
            </div>
            <div class="slide-diy-img">
              {%- for block in section.blocks -%}
                {%- if block.settings.image2 != blank -%}
                  <div class="slide-diy-img-item">
                    <img
                      loading="lazy"
                      class="img"
                      width="{{ block.settings.image2.width }}"
                      height="{{ block.settings.image2.height }}"
                      {% render 'image-attributes', image: block.settings.image2 %}
                      alt="{{ block.settings.image2.alt | escape }}"
                    >
                  </div>
                {%- endif -%}
              {%- endfor -%}
              {%- if section.settings.text3 != blank -%}
                <div class="slide-diy-img-txt">{{ section.settings.text3 }}</div>
              {%- endif -%}
            </div>
          </div>
          <div class="slide-diy-bottom to-top" style="transition-delay: 0.4s">
            <div class="slide-diy-text">
              {%- for block in section.blocks -%}
              <div class="slide-diy-txt-item">
                {{ block.settings.text }}
              </div>
              {%- endfor -%}
            </div>
          </div>
        </div>
        <div class="slide-diy-right to-top">
          <div class="slide-diy-img-list to-top" style="transition-delay: 0.3s">
            <div class="slide-diy-list">
              {%- for block in section.blocks -%}
                <div class="slide-diy-sm">
                  {%- if block.settings.image != blank -%}
                      <img
                        loading="lazy"
                        class="img"
                        data-index="{{ forloop.index }}"
                        width="{{ block.settings.image.width }}"
                        height="{{ block.settings.image.height }}"
                        {% render 'image-attributes', image: block.settings.image %}
                        alt="{{ block.settings.image.alt | escape }}"
                      >
                  {%- endif -%}
                  <div class="slide-diy-sm-txt">{{ block.settings.text }}</div>
                </div>
              {%- endfor -%}
            </div>
          </div>
        </div>
      </div>
      <div class="slide-diy-msg line-top">
        {{ section.settings.text4 }}
      </div>
    </div>
  </div>
</section>
<script>
  window.addEventListener('load',function(){
      function slideDiySwiper(){
        const content = document.querySelector('.slide-diy .slide-diy-cont');
        let $p = $('.slide-diy')
        let $imgBox = $p.find('.slide-diy-img')
        let $imgSm = $p.find('.slide-diy-list')
        let $txt = $p.find('.slide-diy-text')
        let $arraw = $p.find('.slide-diy-arraw')
        let $dot = $p.find('.slide-diy-dot-item')
        let length = $imgSm.find('.slide-diy-sm').length
        let width = $imgSm.find('.slide-diy-sm')[0].offsetWidth
        let txtWidth = $txt.find('.slide-diy-txt-item')[0].offsetWidth
        let index = 0
        let smInex = length + index + 1
        let time = +new Date()
        let timerIn = null
        let min = 0
        $imgSm.html($imgSm.html().repeat(3))
        if(window.innerWidth < 991){
          min = 1
        }
        function changeTransform(bol){
          if(index == length){
            index = 0
            $imgSm.css({'transform': 'translateX(-'+ (width + 24) * (length - min) +'px)','transition':'none'})
          }
          if(index == -1){
            index = length - 1
            $imgSm.css({'transform': 'translateX(-'+ (width + 24) * (length + length + 1 - min) +'px)','transition':'none'})
          }
          smInex = length + index + 1 - min
          $imgBox.each(function(){
            $(this).find('.slide-diy-img-item.close').removeClass('close')
            $(this).find('.slide-diy-img-item.active').removeClass('active').addClass('close')
            $(this).find('.slide-diy-img-item').eq(index).addClass('active')
            $('.slide-diy .slide-diy-bottom').removeClass('active')
            setTimeout(()=>{
              $(this).find('.slide-diy-img-item.close').removeClass('close')
              $('.slide-diy .slide-diy-bottom').addClass('active')
            },600)
          })

          $txt.find('.slide-diy-txt-item').css({'transform': 'translateX(-'+ (txtWidth + 100) * index +'px)','transition': 'transform 0.5s cubic-bezier(0.4, 0.2, 0.2, 1)'})
          $dot.removeClass('active').eq(index).addClass('active')
          if(window.innerWidth < 991){
            $imgSm.find('.slide-diy-sm').removeClass('active').eq(smInex).addClass('active')
          }
          setTimeout(() => {
            if(bol){
              $imgSm.css({'transform': 'translateX(-'+ (width + 24) * smInex +'px)'})
            }else{
              $imgSm.css({'transform': 'translateX(-'+ (width + 24) * smInex +'px)','transition': 'transform 0.5s cubic-bezier(0.4, 0.2, 0.2, 1)'})
            }
          }, 10);
          timerIn = setTimeout(function(){
            index++
            changeTransform()
          },3000)
        }
        changeTransform(true)
        $arraw.find('.slide-diy-arraw-item').click(function(){
          let sindex=$(this).index()
          let clickTime = +new Date()
          if(clickTime - time<800) return
          time = +new Date()
          index += sindex? 1 : -1
          clearTimeout(timerIn)
          changeTransform()
        })

        $imgSm.on('click','.slide-diy-sm',function(){
          let sindex = $(this).find('.img').attr('data-index')*1 - 1
          let clickTime = +new Date()
          if(clickTime - time<800 || index == sindex) return
          time = +new Date()
          index = sindex
          clearTimeout(timerIn)
          changeTransform()
        })

        detectSwipe(content, () => {
          index +=1
          clearTimeout(timerIn)
          changeTransform()
        }, () => {
          index -=1
          clearTimeout(timerIn)
          changeTransform()
        });


        function detectSwipe(element, onSwipeLeft, onSwipeRight) {
          let startX = 0;

          const getEventX = (event) => {
            return event.touches ? event.touches[0].clientX : event.clientX;
          };

          const handleTouchStart = (e) => {
            startX = getEventX(e);
          };

          const handleTouchMove = (e) => {
            const deltaX = getEventX(e) - startX;
            if (Math.abs(deltaX) > 10 && e.cancelable) {
              e.preventDefault();
            }
          };

          const handleTouchEnd = (e) => {
            const deltaX = getEventX(e.changedTouches ? e.changedTouches[0] : e) - startX;
            if (deltaX > 10) {
              onSwipeRight();
            } else if (deltaX < -10) {
              onSwipeLeft();
            }
          };

          element.addEventListener('touchstart', handleTouchStart);
          element.addEventListener('touchmove', handleTouchMove);
          element.addEventListener('touchend', handleTouchEnd);

          // Add mouse event listeners for PC compatibility
          element.addEventListener('mousedown', handleTouchStart);
          element.addEventListener('mousemove', handleTouchMove);
          element.addEventListener('mouseup', handleTouchEnd);
        }
      }
      slideDiySwiper()
    })
</script>
{% schema %}
{
  "name": "preheat-slide-diy2",
  "settings": [
    {
      "type": "richtext",
      "id": "text",
      "label": "Title"
    },
    {
      "type": "text",
      "id": "text1",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "text2",
      "label": "Before"
    },
    {
      "type": "text",
      "id": "text3",
      "label": "After"
    },
    {
      "type": "text",
      "id": "text4",
      "label": "Text"
    }
  ],
  "blocks": [
    {
        "type": "item",
        "name": "item",
        "settings": [
          {
            "type": "image_picker",
            "id": "image1",
            "label": "Image"
          },
          {
            "type": "image_picker",
            "id": "image2",
            "label": "Image"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
          "type": "text",
          "id": "text",
          "label": "Text"
        }
        ]
      }
  ],
  "presets": [
    {
      "name": "preheat-slide-diy2",
      "settings": {},
      "blocks": [
      ]
    }
  ]
}
{% endschema %}